{"version":3,"sources":["./src/app/pages/svc-page/service-card/service-card.component.ts","./src/app/pages/svc-page/service-card/service-card.component.html","./src/app/pages/svc-page/svc-page.module.ts","./src/app/shared/resolvers/serviceinfo.resolver.ts"],"names":[],"mappings":"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","file":"pages-svc-page-svc-page-module-es2015.js","sourcesContent":["import { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AfterContentChecked, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ServiceCard, ServiceInfo } from 'src/app/shared/interfaces';\nimport { RequestService } from 'src/app/shared/services/request.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-service-card',\n  templateUrl: './service-card.component.html',\n  styleUrls: ['./service-card.component.scss']\n})\nexport class ServiceCardComponent implements OnInit, OnDestroy, AfterContentChecked{\n\n  subParams: Subscription\n  subService: Subscription\n  subActRoute: Subscription\n\n  paramsName = ''\n  asideListCard: ServiceCard[] = []\n  serviceInfo: ServiceInfo[] = []\n  serviceShowedComponent: ServiceInfo\n\n  constructor(\n    private router: Router, //for back button\n    private actRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.subActRoute = this.actRoute.data.subscribe(data => {\n      this.asideListCard = data.asideList\n    })\n    this.subParams = this.actRoute.params.subscribe((params: Params) => {\n      this.paramsName = params.name\n      this.subService = this.actRoute.data.subscribe(data => {\n        this.serviceInfo = data.serviceInf\n        this.serviceShowedComponent = this.serviceInfo.find(point => point.name === this.paramsName)\n      })\n    })\n  }\n\n  ngAfterContentChecked(){\n    this.serviceShowedComponent = this.serviceInfo.find(point => point.name == this.paramsName)\n  }\n\n  ngOnDestroy(){\n    if (this.subParams) {\n      this.subParams.unsubscribe()\n    }\n    if (this.subService) {\n      this.subService.unsubscribe()\n    }\n    if (this.subActRoute) {\n      this.subActRoute.unsubscribe()\n    }\n  }\n\n}\n","<section>\n  <div class=\"canvas\">\n    <div class=\"information\" *ngIf=\"serviceShowedComponent;\n      else loading\">\n      <h3 class=\"heading\">{{serviceShowedComponent.title}}</h3>\n      <!-- <h4>Услуги и ремонт:</h4> -->\n      <p id=\"text-before\">{{serviceShowedComponent.main.text}}</p>\n      <ul id=\"list-work\">\n        <li class=\"items\" *ngFor=\"let item of serviceShowedComponent.main.types\">\n          {{item.term}}: {{item.price}} руб.\n        </li>\n      </ul>\n      <p id=\"text-after\">{{serviceShowedComponent.main.nexttext}}</p>\n      <p class=\"about\">{{serviceShowedComponent.about}}</p>\n    </div>\n    <ng-template #loading>\n      <div class=\"information\">Загрузка данных о сервисе...</div>\n    </ng-template>\n\n    <aside class=\"sidebar\">\n      <ul>\n        <li\n          *ngFor=\"let card of asideListCard\"\n          [routerLink]=\"['/services', card.name]\"\n          class=\"slip\" id=\"{{card.name}}\">\n          <h3  [ngStyle]=\"{\n            backgroundColor: card.name == paramsName ? '#403D7A' : 'rgba(251, 251, 251, 0.97)',\n            color: card.name == paramsName ? 'rgba(251, 251, 251, 0.97)': '#403D7A'\n          }\"\n          >{{card.title | uppercase}}</h3>\n        </li>\n      </ul>\n    </aside>\n  </div>\n</section>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nimport { ServiceCardComponent } from './service-card/service-card.component';\r\nimport { AsideListResolver } from 'src/app/shared/resolvers/asidelist.resolver';\r\nimport { ServiceInfoResolver } from 'src/app/shared/resolvers/serviceinfo.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:ServiceCardComponent,\r\n    resolve:{\r\n      asideList:AsideListResolver,\r\n      serviceInf:ServiceInfoResolver\r\n    }\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations:[ServiceCardComponent],\r\n  imports:[\r\n    SharedModule,\r\n    RouterModule.forChild(routes)],\r\n  exports:[RouterModule]\r\n})\r\nexport class SVCPageModule{}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { RequestService } from 'src/app/shared/services/request.service';\r\nimport { ServiceInfo } from 'src/app/shared/interfaces';\r\n\r\n@Injectable({providedIn:'root'})\r\nexport class ServiceInfoResolver implements Resolve<ServiceInfo[]>{\r\n\r\n  constructor(private reqService: RequestService){}\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): ServiceInfo[] | Observable<ServiceInfo[]> | Promise<ServiceInfo[]> {\r\n    return this.reqService.getServiceInfo()\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}